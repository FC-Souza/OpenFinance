// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebAPI.OpenFinance.Data;

#nullable disable

namespace WebAPI.OpenFinance.Migrations
{
    [DbContext(typeof(OpenFinanceContext))]
    [Migration("20250128232358_AddingCashTables")]
    partial class AddingCashTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.OpenFinance.Models.BanksModel", b =>
                {
                    b.Property<int>("bankID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("bank_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("bankID"));

                    b.Property<string>("bankName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bank_name");

                    b.HasKey("bankID");

                    b.ToTable("banks");
                });

            modelBuilder.Entity("WebAPI.OpenFinance.Models.CashInfoModel", b =>
                {
                    b.Property<int>("cashInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cash_info_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("cashInfoId"));

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric")
                        .HasColumnName("amount");

                    b.Property<int>("cashId")
                        .HasColumnType("integer")
                        .HasColumnName("cash_id");

                    b.Property<int>("connectionId")
                        .HasColumnType("integer")
                        .HasColumnName("connection_id");

                    b.HasKey("cashInfoId");

                    b.ToTable("cash_info");
                });

            modelBuilder.Entity("WebAPI.OpenFinance.Models.CashModel", b =>
                {
                    b.Property<int>("cashId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cash_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("cashId"));

                    b.Property<string>("cashDescription")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cash_description");

                    b.Property<int>("productId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.HasKey("cashId");

                    b.ToTable("cash");
                });

            modelBuilder.Entity("WebAPI.OpenFinance.Models.ClientsModel", b =>
                {
                    b.Property<int>("clientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("client_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("clientID"));

                    b.Property<string>("clientAddress")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("client_address");

                    b.Property<string>("clientEmail")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("client_email");

                    b.Property<string>("clientName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("client_name");

                    b.HasKey("clientID");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("WebAPI.OpenFinance.Models.ConnectionsModel", b =>
                {
                    b.Property<int>("connectionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("connection_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("connectionID"));

                    b.Property<int>("accountNumber")
                        .HasColumnType("integer")
                        .HasColumnName("account_number");

                    b.Property<int>("bankID")
                        .HasColumnType("integer")
                        .HasColumnName("bank_id");

                    b.Property<int>("clientID")
                        .HasColumnType("integer")
                        .HasColumnName("client_id");

                    b.HasKey("connectionID");

                    b.ToTable("connections");
                });

            modelBuilder.Entity("WebAPI.OpenFinance.Models.ProductTypesModel", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("productId"));

                    b.Property<string>("productDescription")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("product_description");

                    b.Property<string>("productType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("product_type");

                    b.HasKey("productId");

                    b.ToTable("product_types");
                });
#pragma warning restore 612, 618
        }
    }
}
